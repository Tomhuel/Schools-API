{
	"info": {
		"_postman_id": "f35bfdac-a4b8-4b44-83b3-565b790d4c6a",
		"name": "Teachers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26242746"
	},
	"item": [
		{
			"name": "Get All Teachers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get all teachers HTTP Status', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Get all teachers verify body', () => {",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.be.an(\"array\");",
							"    pm.expect(body).to.be.empty;",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(\"/api/v1/teachers\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Create teacher', () => {",
							"    pm.response.to.have.status(201);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.environment.set('TEACHER_ID', body.id);",
							"    pm.expect(body).to.deep.include(",
							"        {",
							"            \"id\": body.id,",
							"            \"name\": \"Andrés\",",
							"            \"lastname\": \"García\",",
							"            \"email\": \"agarcia@gmail.com\",",
							"            \"phone\": \"644578205\",",
							"            \"age\": 23,",
							"            \"address\": \"Calle San Miguel del Teide\",",
							"            \"students\": [],",
							"            \"courses\": []",
							"        }",
							"    );",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(\"/api/v1/teachers\");",
							"",
							"    const location = pm.response.headers.get('Location');",
							"    pm.expect(location).to.include('/api/v1/teachers/');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Andrés\",\n    \"lastname\": \"García\",\n    \"email\": \"agarcia@gmail.com\",\n    \"phone\": \"644578205\",\n    \"age\": 23,\n    \"address\": \"Calle San Miguel del Teide\",\n    \"students\": [],\n    \"courses\": []\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Teachers AFTER CREATION",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get all teachers', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.be.an(\"array\");",
							"    pm.expect(body).to.have.length(1);",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(\"/api/v1/teachers\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get single teacher', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.deep.include(",
							"        {",
							"            \"id\": pm.environment.get('TEACHER_ID'),",
							"            \"name\": \"Andrés\",",
							"            \"lastname\": \"García\",",
							"            \"email\": \"agarcia@gmail.com\",",
							"            \"phone\": \"644578205\",",
							"            \"age\": 23,",
							"            \"address\": \"Calle San Miguel del Teide\",",
							"            \"students\": [],",
							"            \"courses\": []",
							"        }",
							"    );",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(`/api/v1/teachers/${pm.environment.get('TEACHER_ID')}`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers/:id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{TEACHER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Update teacher', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.deep.include(",
							"        {",
							"            \"id\": body.id,",
							"            \"name\": \"Andrés\",",
							"            \"lastname\": \"García\",",
							"            \"email\": \"agarcia@gmail.com\",",
							"            \"phone\": \"644578205\",",
							"            \"age\": 25,",
							"            \"address\": \"Calle Santiago del Teide\",",
							"            \"students\": [],",
							"            \"courses\": []",
							"        }",
							"    );",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(`/api/v1/teachers/${pm.environment.get('TEACHER_ID')}`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Andrés\",\n    \"lastname\": \"García\",\n    \"email\": \"agarcia@gmail.com\",\n    \"phone\": \"644578205\",\n    \"age\": 25,\n    \"address\": \"Calle Santiago del Teide\",\n    \"students\": [],\n    \"courses\": []\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers/:id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{TEACHER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Teacher Updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get single teacher updated', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.deep.include(",
							"        {",
							"            \"id\": pm.environment.get('TEACHER_ID'),",
							"            \"name\": \"Andrés\",",
							"            \"lastname\": \"García\",",
							"            \"email\": \"agarcia@gmail.com\",",
							"            \"phone\": \"644578205\",",
							"            \"age\": 25,",
							"            \"address\": \"Calle Santiago del Teide\",",
							"            \"students\": [],",
							"            \"courses\": []",
							"        }",
							"    );",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(`/api/v1/teachers/${pm.environment.get('TEACHER_ID')}`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers/:id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{TEACHER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Delete teacher', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(`/api/v1/teachers/${pm.environment.get('TEACHER_ID')}`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers/:id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{TEACHER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Teacher DELETED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get single teacher after delete', () => {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers/:id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{TEACHER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Teachers AFTER DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Get all teacher after delete', () => {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    const body = res.body;",
							"    pm.expect(body).to.be.an(\"array\");",
							"    pm.expect(body).to.be.empty;",
							"    pm.expect(res.timestamp).to.be.not.empty;",
							"    pm.expect(res.uri).to.be.eq(\"/api/v1/teachers\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/v1/teachers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"v1",
						"teachers"
					]
				}
			},
			"response": []
		}
	]
}